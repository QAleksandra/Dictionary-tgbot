# –í google colab –¥–æ–±–∞–≤–∏—Ç—å: !pip install pyTelegramBotAPI

import telebot
from telebot import types
import json

bot = telebot.TeleBot(token='–í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω ', parse_mode='html')

with open('dict.json', "r", encoding="utf-8") as json_file:
    DEFINITIONS = json.load(json_file)

listDEFINITIONS = list(DEFINITIONS.values())

newDEFINITIONS = []

@bot.message_handler(commands=['start'])
def start_command_handler(message):
    sti = open('welcome.jpg', 'rb')
    bot.send_sticker(message.chat.id, sti)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–ö–æ–º—É —ç—Ç–æ –ø—Ä–∏—à–ª–æ –≤ –≥–æ–ª–æ–≤—É? üåö')
    markup.add(item1)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–Ø ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥—ë—Ç –Ω–∞ –ø–æ–º–æ—â—å, –∫–æ–≥–¥–∞ —Ç—ã –≤—Å—Ç—Ä–µ—Ç–∏—à—å –≤ —Ä–∞–±–æ—Ç–µ —Å—Ç—Ä–∞—à–Ω—ã–µ –∏ –Ω–µ–∑–Ω–∞–∫–æ–º—ã–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ üë®üèª‚Äçüíª \n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ —Ç–µ–±—è —Å–ª–æ–≤–æ, –∞ —è –ø–æ–∫–∞–∂—É –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥!", parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def message_handler(message):
    definition = DEFINITIONS.get(message.text.lower())
    if definition is not None and message.text != "–ö–æ–º—É —ç—Ç–æ –ø—Ä–∏—à–ª–æ –≤ –≥–æ–ª–æ–≤—É? üåö":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ö–æ–º—É —ç—Ç–æ –ø—Ä–∏—à–ª–æ –≤ –≥–æ–ª–æ–≤—É? üåö')
        markup.add(item1)
        bot.send_message(message.chat.id, text=f'–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:\n<code>{definition}</code>')
        bot.send_message(message.chat.id, text=f'–ü–µ—Ä–µ–≤–µ–¥—ë–º –µ—â—ë —á—Ç–æ-–Ω–∏–±—É–¥—å?', reply_markup=markup)

    elif message.text == "–ö–æ–º—É —ç—Ç–æ –ø—Ä–∏—à–ª–æ –≤ –≥–æ–ª–æ–≤—É? üåö":
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton('–°–∞–π—Ç-–≤–∏–∑–∏—Ç–∫–∞', url='https://qaleksandra.github.io/CV/')
        markup.add(button1)
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ —É–∑–Ω–∞–µ—à—å ;)'.format(message.from_user), reply_markup=markup)

    elif definition is None and message.text != "–ö–æ–º—É —ç—Ç–æ –ø—Ä–∏—à–ª–æ –≤ –≥–æ–ª–æ–≤—É? üåö":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ö–æ–º—É —ç—Ç–æ –ø—Ä–∏—à–ª–æ –≤ –≥–æ–ª–æ–≤—É? üåö')
        markup.add(item1)
        newDEFINITIONS.append(message.text)
        with open('newdict.txt', "a", encoding="utf-8") as txt_file:
            print(*newDEFINITIONS, file=txt_file, sep="\n")
        bot.send_message(message.chat.id, f'–û, —è —Å–º–æ—Ç—Ä—é –≤—ã –∏–∑ –ê–Ω–≥–ª–∏–∏... üíÇüèª –ê —è ‚Äî –Ω–µ—Ç, –ø—Ä–∏–¥—ë—Ç—Å—è –∑–∞–ø–∏—Å–∞—Ç—å <u><b>{message.text}</b></u> –∫ —Å–µ–±–µ ‚úèÔ∏è', reply_markup=markup)

def main():
    bot.infinity_polling()


if __name__ == '__main__':
    main()
